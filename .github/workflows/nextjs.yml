# Simplified GitHub Pages deployment workflow for SpiralScript IDE
name: Deploy SpiralScript IDE to Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]
    paths-ignore:
      - '**.md'
      - 'docs/**'

  # Allows manual deployment
  workflow_dispatch:

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

# Environment variables
env:
  NODE_VERSION: "22"
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Detect package manager
        id: detect-pm
        run: |
          if [ -f "package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
          elif [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
          elif [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          fi

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ steps.detect-pm.outputs.manager }}

      - name: 🔧 Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: 📦 Install dependencies
        run: ${{ steps.detect-pm.outputs.manager }} ${{ steps.detect-pm.outputs.command }}

      - name: 🔄 Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}-

      - name: 🏗️ Build with Next.js
        run: ${{ steps.detect-pm.outputs.manager }} run build
        env:
          NODE_ENV: production

      - name: 📤 Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 🌐 Deployment complete
        run: |
          echo "🎉 SpiralScript IDE deployed successfully!"
          echo "📍 URL: ${{ steps.deployment.outputs.page_url }}"
