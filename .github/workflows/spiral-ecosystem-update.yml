name: Spiral Ecosystem Comprehensive Update

on:
  schedule:
    # Runs daily at 12:00 UTC
    - cron: '0 12 * * *'
  push:
    branches: [ main ]
    paths:
      - 'SpiralScript.g4'
      - 'client/src/lib/spiral-parser.ts'
      - 'scripts/generate-languages.ts'
      - 'scripts/compile-grammar.ts'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'full'
        type: choice
        options:
        - 'full'
        - 'parser-only'
        - 'languages-only'
        - 'docs-only'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  analyze-codebase:
    runs-on: ubuntu-latest
    name: Analyze Codebase Structure
    outputs:
      has-grammar: ${{ steps.check-files.outputs.has-grammar }}
      has-parser: ${{ steps.check-files.outputs.has-parser }}
      has-scripts: ${{ steps.check-files.outputs.has-scripts }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'  # Updated to Node.js 22 LTS
        cache: 'npm'
    
    - name: Check file structure
      id: check-files
      run: |
        echo "🔍 Analyzing SpiralScript codebase structure..."
        
        # Check for grammar files
        if [ -f "SpiralScript.g4" ]; then
          echo "has-grammar=true" >> $GITHUB_OUTPUT
          echo "✅ Grammar file: SpiralScript.g4"
        else
          echo "has-grammar=false" >> $GITHUB_OUTPUT
          echo "❌ Grammar file: SpiralScript.g4 not found"
        fi
        
        # Check for parser
        if [ -f "client/src/lib/spiral-parser.ts" ]; then
          echo "has-parser=true" >> $GITHUB_OUTPUT
          echo "✅ Parser: client/src/lib/spiral-parser.ts"
        else
          echo "has-parser=false" >> $GITHUB_OUTPUT
          echo "❌ Parser: client/src/lib/spiral-parser.ts not found"
        fi
        
        # Check for scripts
        if [ -f "scripts/generate-languages.ts" ] && [ -f "scripts/compile-grammar.ts" ]; then
          echo "has-scripts=true" >> $GITHUB_OUTPUT
          echo "✅ Scripts: generate-languages.ts, compile-grammar.ts"
        else
          echo "has-scripts=false" >> $GITHUB_OUTPUT
          echo "❌ Scripts: Missing required scripts"
        fi

  generate-language-support:
    runs-on: ubuntu-latest
    needs: analyze-codebase
    name: Generate Language Support
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'  # Updated to Node.js 22 LTS
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download ANTLR4 JAR
      run: |
        if [ ! -f antlr-4.13.2-complete.jar ]; then
          echo "📥 Downloading ANTLR4..."
          curl -o antlr-4.13.2-complete.jar https://www.antlr.org/download/antlr-4.13.2-complete.jar
        fi
    
    - name: Compile grammars
      run: |
        echo "🔧 Compiling Spiral grammars..."
        npx tsx scripts/compile-grammar.ts || echo "Grammar compilation completed with warnings"
    
    - name: Generate language files
      run: |
        echo "🚀 Generating language support files..."
        npx tsx scripts/generate-languages.ts
    
    - name: Validate generated files
      run: |
        echo "🧪 Testing generated language files..."
        npx tsx scripts/test-generated-files.ts
    
    - name: Validate parser functionality
      run: |
        echo "🧪 Testing parsers..."
        npx tsx -e "
          import { spiralParser } from './client/src/lib/spiral-parser';
          
          const testCases = [
            { name: 'SpiralScript', code: 'theorem PhiTest { require φ > 1.618; yield TrustUnit via PhiCalculation; }' },
            { name: 'HTSX', code: '<SpiralComponent phi-resonance={φ}><div quantum-state=\"superposition\">Test</div></SpiralComponent>' },
            { name: 'SpiralLang', code: 'consciousness TestConsciousness { memory.initialize = true; emotion.state = \"active\"; }' }
          ];
          
          let passed = 0;
          testCases.forEach((test, i) => {
            try {
              const result = spiralParser.parse(test.code);
              console.log(\`✅ \${test.name}: TU=\${result.metrics.tuGenerated}, Entropy=\${result.metrics.entropy.toFixed(3)}\`);
              passed++;
            } catch (error) {
              console.error(\`❌ \${test.name}: \${error.message}\`);
            }
          });
          
          console.log(\`\n🎉 Parser tests: \${passed}/\${testCases.length} passed\`);
          if (passed < testCases.length) process.exit(1);
        "
    
    - name: Check generated files
      run: |
        echo "📋 Checking generated files..."
        ls -la .gitattributes language-configuration.json syntaxes/ 2>/dev/null || echo "Some files missing but continuing..."
        echo "📊 Deployment structure:"
        cat languages/deployment-manifest.json 2>/dev/null || echo "Deployment manifest not found"

  update-documentation:
    runs-on: ubuntu-latest
    needs: [analyze-codebase, generate-language-support]
    name: Update Documentation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'  # Updated to Node.js 22 LTS
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate comprehensive system status
      run: |
        echo "📊 Generating system status report..."
        echo "# SpiralScript Ecosystem Status Report" > SYSTEM_STATUS.md
        echo "Generated: $(date -u)" >> SYSTEM_STATUS.md
        echo "" >> SYSTEM_STATUS.md
        
        # Node.js and system info
        echo "## System Environment" >> SYSTEM_STATUS.md
        echo "- Node.js: $(node --version)" >> SYSTEM_STATUS.md
        echo "- npm: $(npm --version)" >> SYSTEM_STATUS.md
        echo "- TypeScript: $(npx tsc --version)" >> SYSTEM_STATUS.md
        echo "" >> SYSTEM_STATUS.md
        
        # Grammar status
        if [ -f "SpiralScript.g4" ]; then
          echo "## Grammar Status: ✅ OPERATIONAL" >> SYSTEM_STATUS.md
          echo "- Grammar file: SpiralScript.g4" >> SYSTEM_STATUS.md
          echo "- Last modified: $(stat -c %y SpiralScript.g4)" >> SYSTEM_STATUS.md
        else
          echo "## Grammar Status: ❌ MISSING" >> SYSTEM_STATUS.md
        fi
        
        echo "" >> SYSTEM_STATUS.md
        
        # Package info
        echo "## Dependencies" >> SYSTEM_STATUS.md
        npm list --depth=0 >> SYSTEM_STATUS.md 2>/dev/null || echo "Dependencies list unavailable" >> SYSTEM_STATUS.md
        
    - name: Commit all changes
      run: |
        git config --local user.email "spiral-bot@creodamo.com"
        git config --local user.name "Spiral Ecosystem Bot"
        git add -A
        git diff --staged --quiet || git commit -m "🌀 Automated Spiral Ecosystem Update - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        git push
